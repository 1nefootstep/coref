# Word embeddings.
glove_300d {
  path = glove.840B.300d.txt
  size = 300
}
glove_300d_filtered {
  path = glove.840B.300d.txt.filtered
  size = 300
}
glove_300d_2w {
  path = glove_50_300_2.txt
  size = 300
}

# Distributed training configurations.
two_local_gpus {
  addresses {
    ps = [localhost:2222]
    worker = [localhost:2223, localhost:2224]
  }
  gpus = [0, 1]
}

# Main configuration.
best {
  bert_config_file = ../bert/cased_L-12_H-768_A-12/bert_config.json
  vocab_file = ../bert/cased_L-12_H-768_A-12/vocab.txt
  init_checkpoint = ../bert/cased_L-12_H-768_A-12/bert_model.ckpt
  # Computation limits.
  max_top_antecedents = 50
  max_training_sentences = 30
  top_span_ratio = 0.4

  # Model hyperparameters.
  filter_widths = [3, 4, 5]
  filter_size = 50
  char_embedding_size = 8
  char_vocab_path = "char_vocab.english.txt"
  context_embeddings = ${glove_300d_filtered}
  head_embeddings = ${glove_300d_2w}
  contextualization_size = 200
  contextualization_layers = 3
  ffnn_size = 150
  ffnn_depth = 2
  feature_size = 20
  max_span_width = 10
  use_metadata = true
  use_features = false
  model_heads = true
  coref_depth = 2
  lm_layers = 3
  lm_size = 1024
  coarse_to_fine = true

  # Learning hyperparameters.
  max_gradient_norm = 5.0
  lstm_dropout_rate = 0.4
  lexical_dropout_rate = 0.2
  dropout_rate = 0.2
  optimizer = adam
  learning_rate = 0.001
  decay_rate = 0.999
  decay_frequency = 100

  # Other.
  train_path = train.english.jsonlines
  eval_path = dev.english.jsonlines
  # conll_eval_path = dev.english.v4_gold_conll
  lm_path = /checkpoint/mandarj/coref/elmo_cache.hdf5
  genres = ["bc", "bn", "mz", "nw", "pt", "tc", "wb"]
  eval_frequency = 1000
  report_frequency = 100
  log_root = /checkpoint/mandarj/coref/logs
  cluster = ${two_local_gpus}
}

with_init_diff.fea.clip10 = ${best} {
  max_num_speakers = 10
  use_metadata = false
  use_features = true
  mean_word_pairs = false
  use_head_attn = false
  use_span_reps = false
  dropout_rate = 0.3
  lexical_dropout_rate = 0.0
  mention_bilinear = true
  max_training_sentences = 50
  eval_frequency = 1000
  max_span_width = 30
  ffnn_size = 1000
  num_epochs = 20
  ffnn_depth = 1
  top_span_ratio = 0.8
  #bert_learning_rate = 5e-6
  #task_learning_rate = 1e-4
  bert_learning_rate = 1e-5
  task_learning_rate = 2e-4
  learning_rate = 1e-5
}

span_reps_trunc_dist = ${best} {
  max_num_speakers = 10
  use_metadata = true
  use_features = true
  dropout_rate = 0.3
  lexical_dropout_rate = 0.0
  max_training_sentences = 3
  eval_frequency = 1000
  max_span_width = 30
  ffnn_size = 1000
  num_epochs = 20
  ffnn_depth = 1
  top_span_ratio = 0.4
  model_heads = false
  #bert_learning_rate = 5e-6
  #task_learning_rate = 1e-4
  bert_learning_rate = 1e-5
  task_learning_rate = 2e-4
  learning_rate = 1e-5
  fine_grained = false
  use_segment_distance = false
}

full.270.5 = ${span_reps_trunc_dist} {
  single_example = true
  top_span_ratio = 0.8
  fine_grained = true
  use_metadata = true
  model_heads = true
  use_features = true
  use_prior = true
  max_training_sentences = 5
}

full.sd4 = ${full.270.5} {
  use_segment_distance = true
  max_training_sentences = 4
}

full.segsettings.30 = ${full.270.5} {
  top_span_ratio = 0.8
  max_training_sentences = 5
  max_top_antecedents = 30
}

# For evaluation. Do not use for training (i.e. only for predict.py, evaluate.py, and demo.py). Rename `best` directory to `final`.
final = ${best} {
  context_embeddings = ${glove_300d}
  head_embeddings = ${glove_300d_2w}
  lm_path = ""
  eval_path = test.english.jsonlines
  conll_eval_path = test.english.v4_gold_conll
}

# Baselines.
c2f_100_ant = ${best} {
  max_top_antecedents = 100
}
c2f_250_ant = ${best} {
  max_top_antecedents = 250
}
c2f_1_layer = ${best} {
  coref_depth = 1
}
c2f_3_layer = ${best} {
  coref_depth = 3
}
distance_50_ant = ${best} {
  max_top_antecedents = 50
  coarse_to_fine = false
  coref_depth = 1
}
distance_100_ant = ${distance_50_ant} {
  max_top_antecedents = 100
}
distance_250_ant = ${distance_50_ant} {
  max_top_antecedents = 250
}
